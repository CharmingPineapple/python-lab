# Вариант 13.
# Создать 5 словарей с помощью литерала {} и цикла типа for на основе таблицы умножения,
# например, {"2*2": 4, "2*3": 6, "2*4": 8, …, "2*9": 18}, {"3*2": 6, "3*3": 9, "3*4": 12, …, "3*9": 27}, …
# , … {"6*2": 12, "6*3": 18, "6*4": 24 …, "6*9": 54}. Собрать первые пять чисел таблицы до
# умножения на 9 {"1*9":9, … "5*9":45} в словарь F. Добавить в каждый словарь значения при
# умножении чисел на 10. Вывести на экран результат по ключу. (использовать генератор range)


letters = [2, 3, 4, 5, 6, 7, 8, 9]
A = {}
B = {}
C = {}
D = {}
E = {}
F = {}

for i in range(2, 10):
    A["2*"+str(i)] = 2*i
    i = i + 1

for i in range(2, 10):
    B["3*"+str(i)] = 3*i
    i = i + 1

for i in range(2, 10):
    C["4*"+str(i)] = 4*i
    i = i + 1

for i in range(2, 10):
    D["5*"+str(i)] = 5*i
    i = i + 1

for i in range(2, 10):
    E["6*"+str(i)] = 6*i
    i = i + 1

for i in range(1, 6):
    F[str(i) + "*9"] = 9*i
    i = i + 1

A["2*10"] = 20
B["3*10"] = 30
C["4*10"] = 40
D["5*10"] = 50
E["6*10"] = 60
F["10*9"] = 100

print(A)
print(B)
print(C)
print(D)
print(E)
print(F)
